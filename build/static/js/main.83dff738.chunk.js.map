{"version":3,"sources":["store/actions/postActionTypes.ts","store/actions/postActions.ts","store/actions/settingsActionsTypes.ts","store/actions/userActionTypes.ts","store/actions/settingsActions.ts","store/actions/userActions.ts","functions/isLoggedIn.js","context/UserContext.js","context/VisitorContext.js","components/auth/PrivateRoute.js","components/auth/AuthOptions.js","favicon.ico","components/layout/Header.js","components/ImagePreview.js","placeholderImage.png","components/PostForm.js","components/PostRead.js","components/PostEdit.js","components/PostEditHandler.js","store/reducers/postReducer.ts","store/reducers/settingsReducer.ts","store/reducers/userReducer.ts","store/reducers/index.ts","store/store.ts","store/selectors/postSelector.ts","store/selectors/userDataSelector.ts","components/Home.js","components/RecipientAddModal.js","components/UserSettings.js","store/selectors/settingsSelector.ts","components/PublicViewPost.js","components/PublicView.js","components/auth/Login.js","components/auth/Register.js","components/PublicHome.js","App.js","index.js"],"names":["GET_POSTS_SUCCESS","ADD_POST_SUCCESS","EDIT_POST_SUCCESS","DELETE_POST_SUCESS","POST_LOADING","POST_FAIL","CLEAN_STATE","dotenv","getPosts","dispatch","a","type","axios","url","process","method","headers","localStorage","getItem","res","payload","data","SETTINGS_FAIL","SETTINGS_LOADING","GET_EDIT_OR_POST_SETTINGS_SUCCESS","REGISTER_USER","LOGIN_USER","CHECK_USER_SIGNED_IN","LOGOUT","GET_USER","EDIT_DISPLAY_NAME","getSettings","msg","response","loginUser","token","user","require","config","isLoggedIn","setItem","createContext","undefined","PrivateRoute","Component","component","rest","useState","loggedIn","setLoggedIn","useEffect","isCancelled","checkLoggedIn","render","props","to","connect","logOut","console","log","history","useHistory","useContext","UserContext","userData","setUserData","VisitorContext","visitor","style","styles","buttonDiv","button","onClick","push","display","height","backgroundColor","color","alignItems","border","cursor","outline","fontSize","padding","Title","Typography","Header","isAuthorized","setIsAuthorized","window","innerWidth","isMobile","navBar","brandInfo","src","logo","brandLogo","alt","brandText","link","justifyContent","marginBottom","margin","width","paddingLeft","textDecoration","ImagePreview","renderImage","state","images","map","image","index","post","counter","imageScrollActive","imageScroll","URL","createObjectURL","incrementCounter","e","preventDefault","length","setState","decrementCounter","handleDelete","i","filter","value","arr","keys","deleteImage","newImages","image_keys","bind","this","imageScrollControlsContainer","imageScrollContainer","imageScrollControls","DeleteOutlined","React","borderRadius","maxWidth","maxHeight","position","TextArea","Input","Text","newPost","today","Date","now","getFullYear","getMonth","padStart","getDate","setPost","setImages","loading","setLoading","date","setDate","hiddenFileInput","useRef","spinning","title","cardForm","headStyle","postImageAndTextForm","uploadDiv","imageFill","key","tempImages","placeholderImage","accept","ref","multiple","onChange","uploadedImages","target","files","concat","imageUploadButton","icon","UploadOutlined","current","click","postTextArea","placeholder","postDateAndUploadForm","dateDiv","marginRight","dateInput","submitButton","disabled","FormData","postDate","append","then","textAlign","marginLeft","resize","marginTop","Paragraph","deletePost","id","changeEditState","months","setCounter","zoomImage","setZoomImage","postStyle","actions","EditOutlined","onConfirm","_id","okText","cancelText","imageScrollControlsLeft","imageScrollZoomActive","imageScrollZoom","imageScrollNonZoomActive","imageScrollNonZoom","imageScrollControlsRight","postText","text","getTimezoneOffset","setTime","getTime","whiteSpace","paddingRight","imageNonZoom","float","imageZoom","opacity","editPost","editedText","setEditedTest","editedImages","setEditedImages","editedImageKeys","setEditedImageKeys","deletedImages","setDeletedImages","deletedImageKeys","setDeletedImageKeys","editedDate","setEditedDate","setNewImages","handleFileUpload","CloseCircleOutlined","CheckCircleOutlined","alert","forEach","submitChanges","name","defaultValue","tempKeys","PostEditHandler","isEditState","setIsEditState","defaultState","postReducer","action","allIds","byIds","reduce","o","settingsReducer","settings","journalName","valid","userReducer","displayName","Reducer","combineReducers","posts","Store","createStore","composeWithDevTools","applyMiddleware","thunk","getPostsFromSelector","store","getState","sort","b","getDateOptions","options","year","includes","month","getPostsBy","getJournalName","dateOptions","setMonth","setYear","userOptionsMobile","userOptionsWeb","userOptionsDiv","vars","split","parseInt","handleChange","Object","label","pageRedirect","replace","open","className","level","postContainer","paddingBottom","bulkAddRecipients","recipients","addRecipient","recipient","re","isVisible","setIsVisible","isBulkAdd","setIsBulkAdd","bulkRecipients","setBulkRecipients","singleRecipient","setSingleRecipient","cleanUp","UsergroupAddOutlined","UserAddOutlined","modal","visible","onOk","noErrors","test","onCancel","bulkAddTextArea","Item","overflowY","Panel","Collapse","deleteRecipient","editJournalName","newName","journal_name","clearRecipients","setJournalName","error","setError","editName","setEditName","header","errorMsg","description","shape","journalNameButtons","catch","editJournalNameHandler","recipientContainer","recipientTag","recipientName","danger","startBulkAdd","deleteAll","cancelButton","deleteAllConfirm","likePost","message","setMsg","zoom","SmileTwoTone","twoToneColor","placement","SmileOutlined","legnth","likes","like","publicGetPosts","match","setVisitor","params","renderMonthOptions","join","setSignIn","email","setEmail","password","setPassword","submit","loginData","loginRes","logInForm","layout","Password","tailLayout","labelCol","span","wrapperCol","offset","newSettings","registerUser","passwordCheck","setPasswordCheck","RegisterForm","suffix","finalJournalName","err","row","Home","signIn","gutter","Content","Layout","Footer","getUser","applicationContainer","Provider","applicationLayoutContentMobile","applicationLayoutContentWeb","path","UserSettings","PublicHome","PublicView","applicationFooter","applicationLogo","boxSizing","minHeight","background","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.83dff738.chunk.js","sourcesContent":["export const GET_POSTS_SUCCESS = 'GET_POSTS_SUCCESS'\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS'\nexport const EDIT_POST_SUCCESS = 'EDIT_POST_SUCCESS'\nexport const DELETE_POST_SUCESS = 'DELETE_POST_SUCESS'\nexport const POST_LOADING = 'POST_LOADING'\nexport const POST_FAIL = 'POST_FAIL'\nexport const CLEAN_STATE = 'CLEAN_STATE'\n\nexport type PostType = {\n    text: string,\n    images: string[],\n    image_keys: string[],\n    date: Date,\n    month: number,\n    year: number,\n    user: string,\n    likes?: number,\n    _id: string\n}\n\nexport interface PostFail {\n    type: typeof POST_FAIL\n}\n\nexport interface PostLoading {\n    type: typeof POST_LOADING\n}\n\nexport interface GetPostsSuccess {\n    type: typeof GET_POSTS_SUCCESS,\n    payload: PostType[]\n}\n\nexport interface AddPostSuccess {\n    type: typeof ADD_POST_SUCCESS,\n    payload: PostType\n}\n\nexport interface EditPostSuccess {\n    type: typeof EDIT_POST_SUCCESS,\n    payload: PostType\n}\n\nexport interface DeletePostSuccess {\n    type: typeof DELETE_POST_SUCESS,\n    payload: string\n}\n\nexport interface CleanState {\n    type: typeof CLEAN_STATE\n}\n\nexport type PostDispatchTypes = PostFail | PostLoading | GetPostsSuccess | AddPostSuccess | EditPostSuccess | DeletePostSuccess | CleanState","import { Dispatch } from 'redux'\nimport axios from 'axios'\nimport { PostDispatchTypes, GET_POSTS_SUCCESS, ADD_POST_SUCCESS, EDIT_POST_SUCCESS, DELETE_POST_SUCESS, POST_FAIL, POST_LOADING } from './postActionTypes'\nimport * as dotenv from 'dotenv'\ndotenv.config()\n\nexport const getPosts = () => async (dispatch: Dispatch<PostDispatchTypes>) => {\n    try {\n        dispatch({\n            type: POST_LOADING\n        })\n\n        const res = await axios({\n            url: `${process.env.REACT_APP_BACKEND}/api/posts/`,\n            method: 'GET',\n            headers: { \"x-auth-token\": localStorage.getItem(\"auth-token\") }\n        })\n\n        dispatch({\n            type: GET_POSTS_SUCCESS,\n            payload: res.data\n        })\n\n    } catch(e) {\n        dispatch({\n            type: POST_FAIL\n        })\n    }\n}\n\nexport const publicGetPosts = (journalName: string) => async (dispatch: Dispatch<PostDispatchTypes>) => {\n    try {\n        dispatch({\n            type: POST_LOADING\n        })\n\n        const res = await axios({\n            url: `${process.env.REACT_APP_BACKEND}/api/posts/public_get?journal_name=${journalName}`,\n            method: 'GET'\n        })\n\n        dispatch({\n            type: GET_POSTS_SUCCESS,\n            payload: res.data\n        })\n\n    } catch(e) {\n        dispatch({\n            type: POST_FAIL\n        })\n    }\n}\n\nexport const newPost = (data: any) => async (dispatch: Dispatch<PostDispatchTypes>) => {\n    try {\n        dispatch({\n            type: POST_LOADING\n        })\n\n        const res = await axios({\n            url :`${process.env.REACT_APP_BACKEND}/api/posts/new`,\n            method: \"POST\",\n            headers: { \"x-auth-token\": localStorage.getItem(\"auth-token\") },\n            data\n        })\n\n        dispatch({\n            type: ADD_POST_SUCCESS,\n            payload: res.data\n        })\n\n    } catch(e) {\n        dispatch({\n            type: POST_FAIL\n        })\n    }\n}\n\nexport const editPost = (data: {}, id: string) => async (dispatch: Dispatch<PostDispatchTypes>) => {\n    try {\n        dispatch({\n            type: POST_LOADING\n        })\n\n        const res = await axios({\n            url: `${process.env.REACT_APP_BACKEND}/api/posts/edit_post?id=${id}`,\n            method: 'PUT',\n            headers: { \"x-auth-token\": localStorage.getItem(\"auth-token\") },\n            data\n        })\n\n        dispatch({\n            type: EDIT_POST_SUCCESS,\n            payload: res.data\n        })\n\n    } catch(e) {\n        dispatch({\n            type: POST_FAIL\n        })\n    }\n}\n\nexport const deletePost = (id: string) => async (dispatch: Dispatch<PostDispatchTypes>) => {\n    try {\n        dispatch({\n            type: POST_LOADING\n        })\n\n        const res = await axios({\n            url: `${process.env.REACT_APP_BACKEND}/api/posts/delete_post?id=${id}`,\n            method: 'DELETE',\n            headers: { \"x-auth-token\": localStorage.getItem(\"auth-token\") }\n        })\n\n        dispatch({\n            type: DELETE_POST_SUCESS,\n            payload: res.data\n        })\n\n    } catch(e) {\n        dispatch({\n            type: POST_FAIL\n        })\n    }\n}\n\nexport const likePost = (id: string, message: string) => async (dispatch: Dispatch<PostDispatchTypes>) => {\n    dispatch({\n        type: POST_LOADING\n    })\n\n    const res = await axios({\n        url: `${process.env.REACT_APP_BACKEND}/api/posts/like_post`,\n        method: 'PUT',\n        data: {\n            id,\n            message\n        }\n    })\n\n    dispatch({\n        type: EDIT_POST_SUCCESS,\n        payload: res.data\n    })\n}","export const SETTINGS_FAIL = 'SETTINGS_FAIL'\nexport const SETTINGS_LOADING = 'SETTINGS_LOADING'\nexport const GET_EDIT_OR_POST_SETTINGS_SUCCESS = 'GET_EDIT_OR_POST_SETTINGS_SUCCESS'\n\nexport type SettingsType = {\n    journal_name: string,\n    recipients: string[],\n    user: string,\n    _id: string\n}\n\nexport interface SettingsFail {\n    type: typeof SETTINGS_FAIL\n}\n\nexport interface SettingsLoading {\n    type: typeof SETTINGS_LOADING\n}\n\nexport interface GetEditOrPostSettingsSuccess {\n    type: typeof GET_EDIT_OR_POST_SETTINGS_SUCCESS,\n    payload: SettingsType\n}\n\nexport type SettingsDispatchTypes = SettingsFail | SettingsLoading | GetEditOrPostSettingsSuccess","export const REGISTER_USER = 'REGISTER_USER'\nexport const LOGIN_USER = 'LOGIN_USER'\nexport const CHECK_USER_SIGNED_IN = 'CHECK_USER_SIGNED_IN' \nexport const LOGOUT = 'LOGOUT'\nexport const GET_USER = 'GET_USER'\nexport const EDIT_DISPLAY_NAME = 'EDIT_DISPLAY_NAME'\n\nexport interface RegisterUser {\n    type: typeof REGISTER_USER,\n    payload: {\n        displayName: string\n    }\n}\n\nexport interface LoginUser {\n    type: typeof LOGIN_USER,\n    payload: {\n        token: string,\n        user: {\n            id: string,\n            journalName: string\n        }\n    }\n}\n\nexport interface CheckUserSignedIn {\n    type: typeof CHECK_USER_SIGNED_IN,\n    payload: boolean\n}\n\nexport interface LogOut {\n    type: typeof LOGOUT\n}\n\nexport interface GetUser {\n    type: typeof GET_USER,\n    payload: {\n        journalName: string,\n        id: string\n    }\n}\n\nexport interface EditDisplayName {\n    type: typeof EDIT_DISPLAY_NAME,\n    payload: string\n}\n\nexport type UserDispatchTypes = RegisterUser | LoginUser | CheckUserSignedIn | LogOut | GetUser | EditDisplayName","import { Dispatch } from 'redux'\nimport { SettingsDispatchTypes, SETTINGS_FAIL, SETTINGS_LOADING, GET_EDIT_OR_POST_SETTINGS_SUCCESS } from './settingsActionsTypes'\nimport { UserDispatchTypes, EDIT_DISPLAY_NAME } from './userActionTypes'\nimport axios from 'axios'\nimport * as dotenv from 'dotenv'\ndotenv.config()\n\nexport const newSettings = (data: any) => async (dispatch: Dispatch<SettingsDispatchTypes>) => {\n    try {\n        dispatch({\n            type: SETTINGS_LOADING\n        })\n\n        const res = await axios({\n            url: `${process.env.REACT_APP_BACKEND}/api/settings/new`,\n            method: 'POST',\n            data\n        })\n\n        dispatch({\n            type: GET_EDIT_OR_POST_SETTINGS_SUCCESS,\n            payload: res.data\n        })\n\n    } catch (e) {\n        dispatch({\n            type: SETTINGS_FAIL,\n            msg: e.response.data.msg\n        })\n    }\n}\n\nexport const getSettings = () => async (dispatch: Dispatch<SettingsDispatchTypes>) => {\n    try {\n        dispatch({\n            type: SETTINGS_LOADING\n        })\n\n        const res = await axios({\n            url: `${process.env.REACT_APP_BACKEND}/api/settings/`,\n            method: 'GET',\n            headers: { \"x-auth-token\": localStorage.getItem(\"auth-token\") }\n        })\n\n        dispatch({\n            type: GET_EDIT_OR_POST_SETTINGS_SUCCESS,\n            payload: res.data\n        })\n\n    } catch (e) {\n        dispatch({\n            type: SETTINGS_FAIL,\n            msg: e.response.data.msg\n        })\n    }\n}\n\nexport const addRecipient = (recipient: string) => async (dispatch: Dispatch<SettingsDispatchTypes>) => {\n    try {\n        dispatch({\n            type: SETTINGS_LOADING\n        })\n\n        const res = await axios({\n            url: `${process.env.REACT_APP_BACKEND}/api/settings/add_recipient`,\n            method: 'PUT',\n            headers: { \"x-auth-token\": localStorage.getItem(\"auth-token\") },\n            data: {\n                recipient\n            }\n        })\n\n        dispatch({\n            type: GET_EDIT_OR_POST_SETTINGS_SUCCESS,\n            payload: res.data\n        })\n\n    } catch (e) {\n        dispatch({\n            type: SETTINGS_FAIL,\n            msg: e.response.data.msg\n        })\n    }\n}\n\nexport const bulkAddRecipients = (recipients: string) => async (dispatch: Dispatch<SettingsDispatchTypes>) => {\n    try {\n        dispatch({\n            type: SETTINGS_LOADING\n        })\n\n        const res = await axios({\n            url: `${process.env.REACT_APP_BACKEND}/api/settings/bulk_add_recipients`,\n            method: 'PUT',\n            headers: { \"x-auth-token\": localStorage.getItem(\"auth-token\") },\n            data: {\n                recipients\n            }\n        })\n\n        dispatch({\n            type: GET_EDIT_OR_POST_SETTINGS_SUCCESS,\n            payload: res.data\n        })\n\n    } catch (e) {\n        dispatch({\n            type: SETTINGS_FAIL,\n            msg: e.response.data.msg\n        })\n    }\n}\n\nexport const editJournalName = (newName: string) => async (dispatch: Dispatch<SettingsDispatchTypes | UserDispatchTypes>) => {\n    dispatch({\n        type: SETTINGS_LOADING\n    })\n\n    const res = await axios({\n        url: `${process.env.REACT_APP_BACKEND}/api/settings/edit_journal_name`,\n        method: 'PUT',\n        headers: { \"x-auth-token\": localStorage.getItem(\"auth-token\") },\n        data: {\n            newName\n        }\n    })\n\n    dispatch({\n        type: GET_EDIT_OR_POST_SETTINGS_SUCCESS,\n        payload: res.data\n    })\n\n    dispatch({\n        type: EDIT_DISPLAY_NAME,\n        payload: res.data.journal_name\n    })\n}\n\nexport const deleteRecipient = (recipient: string) => async (dispatch: Dispatch<SettingsDispatchTypes>) => {\n    try {\n        dispatch({\n            type: SETTINGS_LOADING\n        })\n\n        const res = await axios({\n            url: `${process.env.REACT_APP_BACKEND}/api/settings/delete_recipient`,\n            method: 'PUT',\n            headers: { \"x-auth-token\": localStorage.getItem(\"auth-token\") },\n            data: {\n                recipient\n            }\n        })\n        dispatch({\n            type: GET_EDIT_OR_POST_SETTINGS_SUCCESS,\n            payload: res.data\n        })\n\n    } catch (e) {\n        dispatch({\n            type: SETTINGS_FAIL\n        })\n    }\n}\n\nexport const clearRecipients = () => async (dispatch: Dispatch<SettingsDispatchTypes>) => {\n    try {\n        dispatch({\n            type: SETTINGS_LOADING\n        })\n\n        const res = await axios({\n            url: `${process.env.REACT_APP_BACKEND}/api/settings/clear_recipients`,\n            method: 'PUT',\n            headers: { \"x-auth-token\": localStorage.getItem(\"auth-token\") },\n        })\n\n        dispatch({\n            type: GET_EDIT_OR_POST_SETTINGS_SUCCESS,\n            payload: res.data\n        })\n\n    } catch (e) {\n        dispatch({\n            type: SETTINGS_FAIL,\n            msg: e.response.data.msg\n        })\n    }\n}","import { Dispatch } from 'redux'\nimport { UserDispatchTypes, REGISTER_USER, CHECK_USER_SIGNED_IN, LOGIN_USER, LOGOUT, GET_USER } from './userActionTypes'\nimport { PostDispatchTypes, CLEAN_STATE } from \"./postActionTypes\"\nimport axios from 'axios'\nimport * as dotenv from 'dotenv'\ndotenv.config()\n\nexport const registerUser = (data: any) => async (dispatch: Dispatch<UserDispatchTypes>) => {\n    const res = await axios({\n        url: `${process.env.REACT_APP_BACKEND}/api/users/register`,\n        method: 'POST',\n        data\n    })\n\n    dispatch({\n        type: REGISTER_USER,\n        payload: res.data\n    })\n}\n\nexport const loginUser = (data: any) => async (dispatch: Dispatch<UserDispatchTypes>) => {\n    const res = await axios({\n        url: `${process.env.REACT_APP_BACKEND}/api/users/login`,\n        method: 'POST',\n        data\n    })\n\n    dispatch({\n        type: LOGIN_USER,\n        payload: res.data\n    })\n\n    return { token: res.data.token, user: res.data.user }\n}\n\nexport const isTokenValid = (token: string) => async (dispatch: Dispatch<UserDispatchTypes>) => {\n    const res = await axios({\n        url: `${process.env.REACT_APP_BACKEND}/api/users/isTokenValid`,\n        method: 'POST',\n        headers: { \"x-auth-token\": token }\n    })\n\n    dispatch({\n        type: CHECK_USER_SIGNED_IN,\n        payload: res.data\n    })\n\n    return res.data\n}\n\nexport const getUser = (token: string) => async (dispatch: Dispatch<UserDispatchTypes>) => {\n    const res = await axios({\n        url: `${process.env.REACT_APP_BACKEND}/api/users/`,\n        method: 'GET',\n        headers: { 'x-auth-token': token }\n    })\n\n    dispatch({\n        type: GET_USER,\n        payload: res.data\n    })\n\n    return res.data\n}\n\nexport const logOut = () => (dispatch: Dispatch<UserDispatchTypes | PostDispatchTypes>) => {\n    console.log(\"CLEAN UP\")\n    dispatch({\n        type: LOGOUT\n    })\n    dispatch({\n        type: CLEAN_STATE\n    })\n}","\n// function to check if a user if logged in or not. \n// returns boolean \n\nimport axios from 'axios'\nrequire(\"dotenv\").config()\n\nconst isLoggedIn = async () => {\n    let token = localStorage.getItem(\"auth-token\")\n\n    if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\")\n        token = \"\"\n    }\n\n    const res = await axios({\n        url: `${process.env.REACT_APP_BACKEND}/api/users/isTokenValid`,\n        method: 'POST',\n        headers: { \"x-auth-token\": token }\n    })\n    \n    return res.data\n}\n\nexport default isLoggedIn","import { createContext } from \"react\"\n\nexport default createContext({});","import { createContext } from \"react\"\n\nexport default createContext(undefined);","import React, { useState, useEffect } from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport isLoggedIn from \"../../functions/isLoggedIn\"\n\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const [loggedIn, setLoggedIn] = useState()\n\n    useEffect(() => {\n        let isCancelled = false\n\n        const checkLoggedIn = async () => {\n            if (!isCancelled) {\n                setLoggedIn(await isLoggedIn())\n            }\n        }\n\n        checkLoggedIn()\n\n        return () => isCancelled = true\n    })\n\n    return (\n        // show component only when user is logged in otherwise redirect to home\n        loggedIn !== undefined ? <Route {...rest} render={props => (\n            loggedIn ? (\n                <>\n                    <Component {...props} />\n                </>\n            ) : (\n                    <Redirect to=\"/home\" />\n                )\n        )} /> : <Redirect to=\"/\" />\n    )\n}\n\nexport default PrivateRoute","import React, { useContext } from \"react\"\nimport { connect } from 'react-redux'\nimport { useHistory } from \"react-router-dom\"\nimport UserContext from \"../../context/UserContext\"\nimport VisitorContext from '../../context/VisitorContext'\nimport { logOut } from \"../../store/actions/userActions\"\n\nconst AuthOptions = ({ logOut }) => {\n    const history = useHistory();\n    const { userData, setUserData } = useContext(UserContext)\n    const [visitor] = useContext(VisitorContext)\n\n    const userSettings = () => {\n        history.push(\"/user_settings\")\n    }\n\n    const logout = () => {\n        logOut()\n        setUserData({ token: \"\", user: \"\" })\n        localStorage.setItem(\"auth-token\", \"\")\n        history.push(\"/home\")\n    }\n\n    return (\n        userData.user && !visitor ? <div style={styles.buttonDiv}>\n            <button style={styles.button} onClick={userSettings}>User Settings</button>\n            <button style={styles.button} onClick={logout}>Log out</button>\n        </div> : <></>\n    )\n}\n\nexport default connect(null, { logOut })(AuthOptions)\n\nconst styles = {\n    buttonDiv: {\n        display: 'flex'\n    },\n    button: {\n        height: '50px',\n        backgroundColor: 'rgb(47, 88, 183)',\n        color: 'rgb(245, 245, 245)',\n        alignItems: 'center',\n        border: 'none',\n        cursor: 'pointer',\n        outline: 'none',\n        fontSize: 15,\n        padding: '0 10px 0 10px'\n    }\n}","export default __webpack_public_path__ + \"static/media/favicon.0023e3b7.ico\";","import React, { useState, useEffect, useContext } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport AuthOptions from \"../auth/AuthOptions\"\nimport VisitorContext from '../../context/VisitorContext'\nimport logo from \"../../favicon.ico\"\nimport { Typography } from 'antd'\nimport isLoggedIn from \"../../functions/isLoggedIn\"\n\nconst { Title } = Typography\n\nconst Header = () => {\n    const [visitor] = useContext(VisitorContext)\n    const [isAuthorized, setIsAuthorized] = useState(false)\n    const [isMobile] = useState(window.innerWidth < 435);\n\n    useEffect(() => {\n        let isCancelled = false\n\n        const checkLoggedIn = async () => {\n            if (!isCancelled) {\n                setIsAuthorized(await isLoggedIn())\n            }\n        }\n\n        checkLoggedIn()\n\n        return () => isCancelled = true\n    })\n\n    if (visitor) {\n        return (\n            <div style={styles.navBar}>\n                <div style={styles.brandInfo}>\n                    <img src={logo} style={styles.brandLogo} alt='shared-journal logo' />\n                    {!isMobile ? <Title style={styles.brandText}>Shared Journal</Title> : <Title style={styles.brandText}>SJ</Title>}\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div style={styles.navBar}>\n            <Link to={isAuthorized ? ('/') : ('/home')} style={styles.link}>\n                <div style={styles.brandInfo}>\n                    <img src={logo} style={styles.brandLogo} alt='shared-journal logo' />\n                    {!isMobile ? <Title style={styles.brandText}>Shared Journal</Title> : <Title style={styles.brandText}>SJ</Title>}\n                </div>\n            </Link>\n            {isAuthorized && <AuthOptions />}\n        </div>\n    )\n}\n\nexport default Header\n\nconst styles = {\n    navBar: {\n        backgroundColor: 'rgb(205, 220, 250)',\n        height: '50px',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        display: 'flex',\n        marginBottom: '20px',\n    },\n    brandText: {\n        color: 'rgb(47, 88, 183)',\n        fontSize: 30,\n        margin: 0,\n        padding: '0 0 0 10px'\n    },\n    brandLogo: {\n        width: 30,\n        height: 30\n    },\n    brandInfo: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: 10\n    },\n    link: {\n        textDecoration: 'none'\n    }\n}","import React from \"react\"\nimport { DeleteOutlined } from \"@ant-design/icons\"\n\nclass ImagePreview extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            images: this.props.images,\n            newImages: this.props.newImages,\n            keys: this.props.post && this.props.post.image_keys,\n            counter: 0,\n        }\n\n        this.incrementCounter = this.incrementCounter.bind(this)\n        this.decrementCounter = this.decrementCounter.bind(this)\n        this.renderImage = this.renderImage.bind(this)\n        this.handleDelete = this.handleDelete.bind(this)\n    }\n\n    renderImage = () => {\n        return (\n            this.state.images.map((image, index) => {\n                return (\n                    this.props.post ? (\n                        <img style={index === this.state.counter ? styles.imageScrollActive : styles.imageScroll} src={image} alt={image} key={index} />\n                    ) : (\n                            <img style={index === this.state.counter ? styles.imageScrollActive : styles.imageScroll} src={URL.createObjectURL(image)} alt={image} key={index} />\n                        )\n                )\n            })\n        )\n    }\n\n    incrementCounter = (e) => {\n        e.preventDefault()\n\n        if (this.state.counter === (this.state.images.length - 1)) {\n            this.setState({\n                counter: 0\n            })\n        } else {\n            this.setState({\n                counter: this.state.counter + 1\n            })\n        }\n\n    }\n\n    decrementCounter = (e) => {\n        e.preventDefault()\n\n        if (this.state.counter === 0) {\n            this.setState({\n                counter: this.state.images.length - 1\n            })\n        } else {\n            this.setState({\n                counter: this.state.counter - 1\n            })\n        }\n    }\n\n    handleDelete = (i, e) => {\n        if (this.props.post) {\n            const images = this.state.images.filter((value, index, arr) => {\n                return value !== this.state.images[i]\n            })\n\n            const keys = this.state.keys.filter((value, index, arr) => {\n                return value !== this.state.keys[i]\n            })\n\n            this.setState({\n                counter: 0\n            })\n\n            this.props.deleteImage(this.state.images[i], this.state.keys[i], i)\n\n            this.setState({ images: images, keys: keys })\n\n        } else {\n            const images = this.state.images.filter((value, index, arr) => {\n                return value !== this.state.images[i]\n            })\n\n            this.setState({\n                counter: 0\n            })\n\n            this.props.deleteImage(this.state.images[i], undefined)\n\n            this.setState({ images: images })\n        }\n\n    }\n\n    render() {\n        return (\n            this.state.images.length > 0 && <div>\n                {/* {this.state.images.length > 1 ? ( */}\n                    <div style={styles.imageScrollControlsContainer}>\n                        <div style={styles.imageScrollContainer}>\n                            {this.state.images.length > 1 && <button onClick={this.decrementCounter} style={styles.imageScrollControls}>{\"<\"}</button>}\n                            {this.renderImage()}\n                            {this.state.images.length > 1 && <button onClick={this.incrementCounter} style={styles.imageScrollControls}>{\">\"}</button>}\n                        </div>\n                        <DeleteOutlined onClick={() => this.handleDelete(this.state.counter)} />\n                    </div>\n                {/* ) : (\n                        <div style={styles.imageScrollControlsContainer}>\n                            <div style={styles.imageScrollContainer}>\n                                {this.props.post ? (\n                                    <img style={styles.image} src={this.state.images[0]} alt={this.state.images[this.state.counter]} />\n                                ) : (\n                                        <img src={URL.createObjectURL(this.state.images[0])} style={styles.image} alt={this.state.images[this.state.counter]} />\n                                    )}\n                            </div>\n                            <DeleteOutlined onClick={() => this.handleDelete(this.state.counter)} />\n                        </div>\n                    )\n                } */}\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    image: {\n        borderRadius: 4,\n        margin: '3px 15px 15px 15px',\n        maxWidth: 200,\n        maxHeight: 185,\n        width: 'auto',\n        height: 'auto',\n    },\n    imageScrollActive: {\n        position: 'relative',\n        borderRadius: 4,\n        margin: '3px 15px 15px 15px',\n        maxWidth: 200,\n        maxHeight: 185,\n        width: 'auto',\n        height: 'auto',\n\n    },\n    imageScroll: {\n        display: 'none',\n    },\n    imageScrollContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n    },\n    imageScrollControls: {\n        border: 'none',\n        backgroundColor: 'rgb(255, 255, 255)',\n        outline: 'none',\n        cursor: 'pointer',\n        padding: 0,\n        margin: 0\n    },\n    imageScrollControlsContainer: {\n        margin: '0 auto'\n    }\n}\n\nexport default ImagePreview","export default __webpack_public_path__ + \"static/media/placeholderImage.264a9e63.png\";","import React, { useState } from \"react\"\nimport { connect } from 'react-redux'\nimport FormData from \"form-data\"\nimport { newPost } from '../store/actions/postActions'\nimport { Button, Card, Input, Typography, Spin, Tooltip } from \"antd\"\nimport { UploadOutlined } from '@ant-design/icons'\nimport ImagePreview from \"./ImagePreview\"\nimport placeholderImage from \"../placeholderImage.png\"\n\nconst { TextArea } = Input\nconst { Text } = Typography\n\nconst PostForm = ({ newPost }) => {\n    const today = `${new Date(Date.now()).getFullYear()}-${(new Date(Date.now()).getMonth() + 1 + \"\").length === 1 ? ((new Date(Date.now()).getMonth() + 1 + \"\").padStart(2, 0)) : (new Date(Date.now()).getMonth() + 1)}-${(new Date(Date.now()).getDate() + 1 + \"\").length === 1 ? ((new Date(Date.now()).getDate() + 1 + \"\").padStart(2, 0)) : (new Date(Date.now()).getDate() + 1)}`\n    const [post, setPost] = useState(\"\")\n    const [images, setImages] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [date, setDate] = useState('')\n    const hiddenFileInput = React.useRef(null)\n\n    const handleFileUpload = (e) => {\n        const uploadedImages = []\n        for (let i = 0; i < e.target.files.length; i++) {\n            uploadedImages.push(e.target.files[i])\n        }\n        setImages(images.concat(uploadedImages))\n    }\n\n    const deleteImage = (image, key, index) => {\n        const tempImages = []\n        for (let i = 0; i < images.length; i++) {\n            if (image !== images[i])\n                tempImages.push(images[i])\n        }\n        setImages(tempImages)\n    }\n\n    const submitPost = () => {\n        const data = new FormData()\n        const postDate = new Date(date || Date.now())\n        data.append(\"text\", post)\n        data.append('date', postDate)\n        data.append(\"month\", postDate.getMonth())\n        data.append(\"year\", postDate.getFullYear())\n        images.map(image => {\n            return data.append(\"image\", image)\n        })\n        setLoading(true)\n        newPost(data).then(() => {\n            setLoading(false)\n            setPost(\"\")\n            setImages([])\n            setDate('')\n        })\n    }\n\n    return (\n        <div>\n            <Spin spinning={loading}>\n                <Card title='Compose a Post' style={styles.cardForm} headStyle={{ fontSize: 25 }}>\n                    <div style={styles.postImageAndTextForm}>\n                        {images.length !== 0 ? (\n                            <div style={styles.uploadDiv}>\n                                <div style={styles.imageFill}>\n                                    <ImagePreview images={images} deleteImage={deleteImage} />\n                                </div>\n                            </div>\n                        ) : (\n                                <div style={styles.uploadDiv}>\n                                    <div style={styles.imageFill} >\n                                        <img src={placeholderImage} style={styles.placeholderImage} alt='placeholder' />\n                                    </div>\n                                    <input type=\"file\" accept=\"image/*\" ref={hiddenFileInput} style={{ display: 'none' }} multiple={true} onChange={handleFileUpload} />\n                                    <Button style={styles.imageUploadButton} icon={<UploadOutlined />} onClick={() => hiddenFileInput.current.click()}>Click to Upload</Button>\n                                </div>\n                            )}\n                        <TextArea style={styles.postTextArea} value={post} onChange={(e) => setPost(e.target.value)} placeholder=\"Start a new Post\" />\n                    </div>\n                    <div style={styles.postDateAndUploadForm}>\n                        <div style={styles.dateDiv}>\n                            <Text style={{ color: 'rgb(245, 245, 245)', marginRight: 10 }}>Date</Text>\n                            <input style={styles.dateInput} type='date' value={date || today} onChange={(e) => setDate(e.target.value)} />\n                        </div>\n                        <Tooltip title={post.length === 0 ? (\"Your post must have text\") : ''}>\n                            <Button style={styles.submitButton} disabled={post.length === 0} onClick={submitPost}>Submit</Button>\n                        </Tooltip>\n                    </div>\n                </Card>\n            </Spin>\n        </div>\n    )\n}\n\nexport default connect(null, { newPost })(PostForm)\n\nconst styles = {\n    cardForm: {\n        margin: 35,\n        textAlign: 'center'\n    },\n    imageFill: {\n        padding: 10,\n        width: 280,\n        height: 240,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        border: '1.5px solid black',\n        borderRadius: 8\n    },\n    uploadDiv: {\n        display: 'block',\n    },\n    postTextArea: {\n        marginLeft: 25,\n        height: 240,\n        padding: 10,\n        resize: 'none',\n        fontSize: 15,\n        outline: 'none'\n    },\n    postImageAndTextForm: {\n        display: 'flex',\n        margin: 25\n    },\n    postDateAndUploadForm: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginRight: 50,\n        marginLeft: 50\n    },\n    dateDiv: {\n        padding: '5px 10px 5px 10px',\n        borderRadius: 8,\n        display: 'flex',\n        maxWidth: 350,\n        margin: 5,\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        backgroundColor: 'rgb(47, 88, 183)',\n    },\n    dateInput: {\n        borderRadius: 2,\n        border: 'none'\n    },\n    submitButton: {\n        height: 34,\n        border: 'none',\n        borderRadius: 8,\n        color: 'rgb( 245, 245, 245)',\n        backgroundColor: 'rgb(47, 88, 183)'\n    },\n    imageUploadButton: {\n        borderRadius: 8,\n        marginTop: 5\n    },\n    placeholderImage: {\n        maxWidth: 200,\n        maxHeight: 250,\n        width: 'auto',\n        height: 'auto'\n    }\n}","import React, { useState } from \"react\"\nimport { Card, Popconfirm, Typography } from 'antd'\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons'\nimport { connect } from \"react-redux\"\nimport { deletePost } from '../store/actions/postActions'\n\nconst { Text, Paragraph } = Typography\n\nconst PostRead = ({ post, deletePost, changeEditState }) => {\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    const [counter, setCounter] = useState(0)\n    const [images] = useState(post.images)\n    const [zoomImage, setZoomImage] = useState(false)\n    const isMobile = window.innerWidth < 435\n\n    const renderImage = () => {\n        return images.map((image, index) => {\n            return (\n                <img style={zoomImage ? (index === counter ? (styles.imageScrollZoomActive) : (styles.imageScrollZoom)) : (index === counter ? (styles.imageScrollNonZoomActive) : (styles.imageScrollNonZoom))} src={image} alt={image} key={index} onClick={() => setZoomImage(!zoomImage)} />\n            )\n        })\n    }\n\n    const getDate = () => {\n        const date = new Date(post.date)\n\n        if (date.getTimezoneOffset() > 0) { date.setTime(date.getTime() + date.getTimezoneOffset() * 60 * 1000) }\n\n        return (\n            `${date.getDate()} ~ ${months[date.getMonth()]} ~ ${date.getFullYear()}`\n        )\n    }\n\n    return (\n        <Card style={!isMobile ? styles.postStyle : {}} actions={[\n            <EditOutlined key='edit' onClick={() => changeEditState()} />,\n            <Popconfirm title=\"Are you sure to delete this post?\" onConfirm={() => deletePost(post._id)} okText=\"Yes\" cancelText=\"No\">\n                <DeleteOutlined key='delete' />\n            </Popconfirm>\n        ]}>\n            {images && <div style={styles.imageScrollContainer}>\n                {post.images.length > 1 && <button style={styles.imageScrollControlsLeft} onClick={() => { counter === 0 ? setCounter(images.length - 1) : setCounter(counter - 1) }}>{\"<\"}</button>}\n                {renderImage()}\n                {post.images.length > 1 && <button style={styles.imageScrollControlsRight} onClick={() => { counter === images.length - 1 ? setCounter(0) : setCounter(counter + 1) }}>{\">\"}</button>}\n            </div>}\n            <Paragraph style={styles.postText}>\n                <Text>{post.text}</Text>\n            </Paragraph>\n            <p style={styles.postDate}>{getDate()}</p>\n        </Card>\n    )\n}\n\nexport default connect(null, { deletePost })(PostRead)\n\nconst styles = {\n    postStyle: {\n        marginRight: 50,\n        marginLeft: 50,\n    },\n    postText: {\n        whiteSpace: 'pre-wrap',\n        paddingRight: 15,\n    },\n    postDate: {\n        fontSize: 12,\n    },\n    imageNonZoom: {\n        float: 'left',\n        borderRadius: 4,\n        margin: '3px 15px 15px 15px',\n        maxWidth: '25%',\n        maxHeight: 300,\n        width: 'auto',\n        height: 'auto',\n        cursor: 'zoom-in'\n    },\n    imageZoom: {\n        float: 'left',\n        borderRadius: 4,\n        margin: '3px 15px 15px 15px',\n        maxWidth: '45%',\n        maxHeight: 600,\n        width: 'auto',\n        height: 'auto',\n        cursor: 'zoom-out'\n    },\n    imageScrollZoomActive: {\n        position: 'relative',\n        float: 'left',\n        borderRadius: 4,\n        margin: '3px 15px 15px 15px',\n        maxWidth: 600,\n        maxHeight: 600,\n        width: 'auto',\n        height: 'auto',\n        cursor: 'zoom-out'\n    },\n    imageScrollNonZoomActive: {\n        position: 'relative',\n        float: 'left',\n        borderRadius: 4,\n        margin: '3px 15px 15px 15px',\n        maxWidth: 300,\n        maxHeight: 300,\n        width: 'auto',\n        height: 'auto',\n        cursor: 'zoom-in'\n\n    },\n    imageScrollZoom: {\n        opacity: 0,\n        position: 'fixed',\n        float: 'left',\n        width: 0,\n        height: 0,\n    },\n    imageScrollNonZoom: {\n        opacity: 0,\n        position: 'fixed',\n        float: 'left',\n        width: 0,\n        height: 0\n    },\n    imageScrollContainer: {\n        display: 'flex',\n        float: 'left',\n        marginRight: 15\n    },\n    imageScrollControlsRight: {\n        border: 'none',\n        backgroundColor: 'rgb(255, 255, 255)',\n        outline: 'none',\n        cursor: 'pointer',\n        padding: 0,\n        margin: 0\n    },\n    imageScrollControlsLeft: {\n        float: 'left',\n        border: 'none',\n        backgroundColor: 'rgb(255, 255, 255)',\n        outline: 'none',\n        cursor: 'pointer',\n        padding: 0,\n        margin: 0\n    }\n}","import React, { useState } from \"react\"\nimport { Typography, Spin, Input, Card, Button } from 'antd'\nimport { CloseCircleOutlined, CheckCircleOutlined, UploadOutlined, DeleteOutlined } from '@ant-design/icons'\nimport FormData from \"form-data\"\nimport { connect } from 'react-redux'\nimport { editPost } from '../store/actions/postActions'\nimport placeholderImage from \"../placeholderImage.png\"\n\nconst { Text } = Typography\nconst { TextArea } = Input\n\nconst PostEdit = ({ editPost, post, changeEditState }) => {\n    const date = `${new Date(post.date).getFullYear()}-${(new Date(post.date).getMonth() + 1 + \"\").length === 1 ? ((new Date(post.date).getMonth() + 1 + \"\").padStart(2, 0)) : (new Date(post.date).getMonth() + 1)}-${(new Date(post.date).getDate() + 1 + \"\").length === 1 ? ((new Date(post.date).getDate() + 1 + \"\").padStart(2, 0)) : (new Date(post.date).getDate() + 1)}`\n    const [editedText, setEditedTest] = useState(post.text)\n    const [editedImages, setEditedImages] = useState(post.images)\n    const [editedImageKeys, setEditedImageKeys] = useState(post.image_keys)\n    const [deletedImages, setDeletedImages] = useState([])\n    const [deletedImageKeys, setDeletedImageKeys] = useState([])\n    const [editedDate, setEditedDate] = useState('')\n    const [newImages, setNewImages] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [counter, setCounter] = useState(0)\n    const hiddenFileInput = React.useRef(null)\n\n    const submitChanges = () => {\n        if (editedText === \"\") { return (alert(\"You cannot leave your post without any text\")) }\n        const data = new FormData()\n        newImages.forEach(image => {\n            return data.append(\"image\", image)\n        })\n        data.append(\"text\", editedText)\n        data.append(\"dateTime\", editedDate)\n        data.append(\"imagesToDelete\", deletedImages)\n        data.append(\"keysToDelete\", deletedImageKeys)\n\n        setLoading(true)\n        editPost(data, post._id).then(() => {\n            setLoading(false)\n            changeEditState()\n        })\n    }\n\n    const handleFileUpload = (e) => {\n        const uploadedImages = []\n        for (let i = 0; i < e.target.files.length; i++) {\n            uploadedImages.push(e.target.files[i])\n        }\n        setNewImages(newImages.concat(uploadedImages))\n    }\n\n    const deleteImage = (index) => {\n        if (index <= editedImages.length - 1) {\n            setDeletedImages(deletedImages.concat([editedImages[index]]))\n            const tempImages = []\n            editedImages.forEach((image, i) => {\n                if (i !== index) { tempImages.push(image) }\n            })\n            setEditedImages(tempImages)\n            setDeletedImageKeys(deletedImageKeys.concat([editedImageKeys[index]]))\n            const tempKeys = []\n            editedImageKeys.forEach((key, i) => {\n                if (i !== index) { tempKeys.push(key) }\n            })\n            setEditedImageKeys(tempKeys)\n        } else {\n            const tempImages = []\n            newImages.forEach((image, i) => {\n                if (i !== index - editedImages.length) { tempImages.push(image) }\n            })\n            setNewImages(tempImages)\n        }\n        setCounter(0)\n    }\n\n    const renderImage = () => {\n        return editedImages.concat(newImages).map((image, index) => {\n            return (\n                typeof image === 'string' ? (\n                    <img style={index === counter ? styles.imageScrollActive : styles.imageScroll} src={image} alt={image} key={index} />\n                ) : (\n                        <img style={index === counter ? styles.imageScrollActive : styles.imageScroll} src={URL.createObjectURL(image)} alt={image} key={index} />\n                    )\n            )\n        })\n    }\n\n    return (\n        <Spin spinning={loading}>\n            <Card style={styles.cardForm} actions={[\n                <CloseCircleOutlined onClick={() => changeEditState()} />,\n                <CheckCircleOutlined onClick={() => submitChanges()} />\n            ]}>\n                {editedImages.concat(newImages).length === 0 ? (\n                    <div style={styles.postImageAndTextForm}>\n                        <div style={styles.uploadDiv}>\n                            <div style={styles.imageFill} >\n                                <img src={placeholderImage} style={styles.placeholderImage} alt='placeholder' />\n                            </div>\n                            <input type=\"file\" accept=\"image/*\" ref={hiddenFileInput} style={{ display: 'none' }} multiple={true} onChange={handleFileUpload} />\n                            <Button style={styles.imageUploadButton} icon={<UploadOutlined />} onClick={() => hiddenFileInput.current.click()}>Click to Upload</Button>\n                        </div>\n                        <TextArea style={styles.postTextArea} name=\"text\" defaultValue={post.text} onChange={(e) => setEditedTest(e.target.value)} placeholder=\"Add text to your Post\" />\n                    </div>\n                ) : (\n                        editedImages && <div style={styles.postImageAndTextForm}>\n                            <div style={styles.uploadDiv}>\n                                <div style={styles.imageFill}>\n                                    <div style={styles.imageScrollControlsContainer}>\n                                        <div style={styles.imageScrollContainer}>\n                                            {editedImages.concat(newImages).length > 1 && <button style={styles.imageScrollControls} onClick={() => { counter === 0 ? setCounter(editedImages.concat(newImages).length - 1) : setCounter(counter - 1) }}>{\"<\"}</button>}\n                                            {renderImage()}\n                                            {editedImages.concat(newImages).length > 1 && <button style={styles.imageScrollControls} onClick={() => { counter === editedImages.concat(newImages).length - 1 ? setCounter(0) : setCounter(counter + 1) }}>{\">\"}</button>}\n                                        </div>\n                                        <DeleteOutlined onClick={() => deleteImage(counter)} />\n                                    </div>\n                                </div>\n                                <input type=\"file\" accept=\"image/*\" ref={hiddenFileInput} style={{ display: 'none' }} multiple={true} onChange={handleFileUpload} />\n                                <Button style={styles.imageUploadButton} icon={<UploadOutlined />} onClick={() => hiddenFileInput.current.click()}>Click to Upload</Button>\n                            </div>\n                            <TextArea style={styles.postTextArea} name=\"text\" defaultValue={post.text} onChange={(e) => setEditedTest(e.target.value)} placeholder=\"Add text to your Post\" />\n                        </div>\n                    )}\n                <div style={styles.dateDiv}>\n                    <Text style={{ color: 'rgb(245, 245, 245)', marginRight: 10 }}>Date</Text>\n                    <input type='date' style={styles.dateInput} value={editedDate || date} onChange={(e) => setEditedDate(e.target.value)} />\n                </div>\n            </Card>\n        </Spin>\n    )\n}\n\nexport default connect(null, { editPost })(PostEdit)\n\nconst styles = {\n    cardForm: {\n        margin: 35,\n        paddingRight: 25,\n        paddingLeft: 25,\n        textAlign: 'center'\n    },\n    postImageAndTextForm: {\n        display: 'flex',\n        margin: 25\n    },\n    uploadDiv: {\n        display: 'block',\n    },\n    imageUploadButton: {\n        borderRadius: 8,\n        marginTop: 5,\n        marginBottom: 4\n    },\n    placeholderImage: {\n        maxWidth: 200,\n        maxHeight: 250,\n        width: 'auto',\n        height: 'auto'\n    },\n    imageFill: {\n        padding: 10,\n        width: 280,\n        height: 240,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        border: '1.5px solid black',\n        borderRadius: 8,\n        // marginRight: 25\n    },\n    dateDiv: {\n        padding: '5px 10px 5px 10px',\n        borderRadius: 8,\n        display: 'flex',\n        maxWidth: 350,\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        backgroundColor: 'rgb(47, 88, 183)',\n    },\n    dateInput: {\n        borderRadius: 2,\n        border: 'none'\n    },\n    postTextArea: {\n        margin: '0 0 20px 0',\n        height: 240,\n        padding: 10,\n        resize: 'none',\n        fontSize: 15,\n        outline: 'none',\n        marginLeft: 25\n    },\n    image: {\n        borderRadius: 4,\n        margin: '3px 15px 15px 15px',\n        maxWidth: 200,\n        maxHeight: 185,\n        width: 'auto',\n        height: 'auto',\n    },\n    imageScrollActive: {\n        position: 'relative',\n        borderRadius: 4,\n        margin: '3px 15px 15px 15px',\n        maxWidth: 200,\n        maxHeight: 185,\n        width: 'auto',\n        height: 'auto',\n\n    },\n    imageScroll: {\n        display: 'none',\n    },\n    imageScrollContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n    },\n    imageScrollControls: {\n        border: 'none',\n        backgroundColor: 'rgb(255, 255, 255)',\n        outline: 'none',\n        cursor: 'pointer',\n        padding: 0,\n        margin: 0\n    },\n    imageScrollControlsContainer: {\n        margin: '0 auto'\n    }\n}","import React, { useState } from \"react\"\nimport PostRead from \"./PostRead\"\nimport PostEdit from \"./PostEdit\"\n\nconst PostEditHandler = (props) => {\n    const [isEditState, setIsEditState] = useState(false)\n\n    const changeEditState = () => {\n        setIsEditState(!isEditState)\n    }\n\n    return (\n        isEditState ? (\n            <PostEdit post={props.post} changeEditState={changeEditState} />\n        ) : (\n                <PostRead post={props.post} changeEditState={changeEditState} />\n            )\n    )\n}\n\nexport default PostEditHandler","import { PostType, GET_POSTS_SUCCESS, EDIT_POST_SUCCESS, DELETE_POST_SUCESS, ADD_POST_SUCCESS, PostDispatchTypes, POST_FAIL, POST_LOADING, CLEAN_STATE } from \"../actions/postActionTypes\"\n\ninterface DefaultStateI {\n    loading: boolean,\n    allIds?: string[],\n    byIds?: {\n        [key: string]: PostType\n    }\n}\n\nconst defaultState: DefaultStateI = {\n    loading: false\n}\n\nconst postReducer = (state: DefaultStateI = defaultState, action: PostDispatchTypes): DefaultStateI => {\n    switch (action.type) {\n        case POST_FAIL:\n            return {\n                ...state,\n                loading: false\n            }\n\n        case POST_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case GET_POSTS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                allIds: action.payload.map(post => {\n                    return post._id\n                }),\n                byIds: action.payload.reduce((o, post) => ({ ...o, [post._id]: post }), {})\n            }\n\n        case ADD_POST_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                allIds: [...state.allIds!, action.payload._id],\n                byIds: {\n                    ...state.byIds!,\n                    [action.payload._id]: action.payload\n                }\n            }\n\n        case DELETE_POST_SUCESS:\n            return {\n                ...state,\n                loading: false,\n                allIds: state.allIds!.filter(id => id !== action.payload)\n            }\n\n        case EDIT_POST_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                byIds: {\n                    ...state.byIds!,\n                    [action.payload._id]: action.payload\n                }\n            }\n\n        case CLEAN_STATE:\n            return {\n                loading: false,\n                allIds: [],\n                byIds: {}\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default postReducer","import { SettingsDispatchTypes, SettingsType, SETTINGS_FAIL, SETTINGS_LOADING, GET_EDIT_OR_POST_SETTINGS_SUCCESS } from \"../actions/settingsActionsTypes\"\n\ninterface DefaultStateI {\n    loading: boolean,\n    settings?: SettingsType\n}\n\nconst defaultState: DefaultStateI = {\n    loading: false\n}\n\nconst settingsReducer = (state: DefaultStateI = defaultState, action: SettingsDispatchTypes): DefaultStateI => {\n    switch (action.type) {\n        case SETTINGS_FAIL:\n            return {\n                ...state,\n                loading: false\n            }\n\n        case SETTINGS_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case GET_EDIT_OR_POST_SETTINGS_SUCCESS:\n            return {\n                ...state,\n                settings: action.payload\n            }\n\n\n        default:\n            return state\n    }\n}\n\nexport default settingsReducer","import { UserDispatchTypes, REGISTER_USER, LOGIN_USER, CHECK_USER_SIGNED_IN, LOGOUT, GET_USER, EDIT_DISPLAY_NAME } from \"../actions/userActionTypes\"\n\ninterface DefaultStateI {\n    token: string,\n    journalName: string,\n    id: string,\n    valid: boolean\n}\n\nconst defaultState: DefaultStateI = {\n    token: '',\n    journalName: '',\n    id: '',\n    valid: false\n}\n\nconst userReducer = (state: DefaultStateI = defaultState, action: UserDispatchTypes): DefaultStateI => {\n    switch (action.type) {\n        case REGISTER_USER: \n            return {\n                ...state,\n                journalName: action.payload.displayName\n            }\n\n        case LOGIN_USER:\n            return {\n                ...state,\n                token: action.payload.token,\n                id: action.payload.user.id,\n                journalName: action.payload.user.journalName\n            }\n\n        case CHECK_USER_SIGNED_IN:\n            return {\n                ...state,\n                valid: action.payload\n            }\n\n        case LOGOUT:\n            return {\n                token: '',\n                journalName: '',\n                id:  '',\n                valid: false\n            }\n\n        case GET_USER:\n            return {\n                ...state,\n                journalName: action.payload.journalName,\n                id: action.payload.id\n            }\n\n        case EDIT_DISPLAY_NAME:\n            return {\n                ...state,\n                journalName: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default userReducer","import { combineReducers } from 'redux'\nimport postReducer from \"./postReducer\"\nimport settingsReducer from './settingsReducer'\nimport userReducer from './userReducer'\n\nconst Reducer = combineReducers({\n    posts: postReducer,\n    settings: settingsReducer,\n    userData: userReducer\n})\n\nexport default Reducer","import { createStore, applyMiddleware } from 'redux'\nimport Reducer from \"./reducers\"\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\nconst Store = createStore(Reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport type RootStore = ReturnType<typeof Reducer>\n\nexport default Store","import store from '../store'\nimport { PostType } from '../actions/postActionTypes'\n\nexport const getPostsFromSelector = () => {\n    const posts: PostType[] = []\n\n    store.getState().posts.allIds && store.getState().posts.allIds!.forEach(id => posts.push(store.getState().posts.byIds![id]));\n\n    return posts.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n}\n\nexport const getDateOptions = () => {\n    const options: any = {}\n\n    store.getState().posts.allIds && store.getState().posts.allIds!.forEach(id => {\n        options[store.getState().posts.byIds![id].year] = []\n    })\n\n    store.getState().posts.allIds && store.getState().posts.allIds!.forEach(id => {\n        const post: PostType = store.getState().posts.byIds![id]\n        if (!options[post.year].includes(post.month)) {\n            options[post.year].push(post.month)\n        }\n    })\n\n    return options\n}\n\nexport const getPostsBy = (month: number, year: number) => {\n    const posts: PostType[] = []\n\n    store.getState().posts.allIds && store.getState().posts.allIds!.forEach(id => posts.push(store.getState().posts.byIds![id]));\n\n    return posts.filter(post => post.month === month && post.year === year)\n}","import store from '../store'\n\nexport const getToken = () => {\n    return store.getState().userData.token \n}\n\nexport const getJournalName = () => {\n    return store.getState().userData.journalName\n}\n\nexport const getIsValid = () => {\n    return store.getState().userData.valid\n}\n\nexport const getUser = () => {\n    return store.getState().userData.id\n}\n\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux'\nimport { Typography } from 'antd'\nimport PostForm from \"../components/PostForm\";\nimport PostEditHandler from \"./PostEditHandler\"\nimport { getPosts } from '../store/actions/postActions'\nimport { getPostsFromSelector, getDateOptions, getPostsBy } from \"../store/selectors/postSelector\";\nimport { getUser, getJournalName } from \"../store/selectors/userDataSelector\";\n\nconst { Title } = Typography\n\nconst Home = ({ posts, dateOptions, user, journalName, getPosts }) => {\n    const [month, setMonth] = useState('')\n    const [year, setYear] = useState('')\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    const [isMobile] = useState(window.innerWidth < 435);\n\n    useEffect(() => {\n        getPosts()\n    }, [getPosts])\n\n    const renderDateOptions = () => {\n        return dateOptions && Object.keys(dateOptions).map((year, index) => {\n            return (\n                <optgroup label={year} value={year} key={index}>\n                    {dateOptions[year] && dateOptions[year].map((month, index) => {\n                        return <option key={index} value={month + \",\" + year}>{months[month]}</option>\n                    })}\n                </optgroup>\n            )\n        })\n    }\n\n    const openVisitorPage = () => {\n        // const url = `https://sharedjournal.capefamily.org/visitor/${journalName.replace(\" \", \"_\")}`;\n        const url = `http://localhost:3000/visitor/${journalName.replace(\" \", \"_\")}`;\n        window.open(url, '_blank');\n    }\n\n    const handleChange = (e) => {\n        const vars = e.target.value.split(\",\")\n\n        if (vars[0] === \"undefined\") {\n            setMonth('')\n            setYear('')\n        } else {\n            setMonth(parseInt(vars[0]))\n            setYear(parseInt(vars[1]))\n        }\n    }\n\n    const renderAllPosts = () => {\n        return posts.map((post, index) => {\n            return <div style={styles.postContainer} key={index}>\n                <PostEditHandler post={post} />\n            </div>\n        })\n    }\n\n    const renderPostsFromDate = () => {\n        return getPostsBy(month, year).map((post, index) => {\n            return <div style={styles.postContainer} key={index}>\n                <PostEditHandler post={post} />\n            </div>\n        })\n    }\n\n    return (\n        <div>\n            <h1>{journalName}</h1>\n            <PostForm />\n            {posts ? (\n                <>\n                    <div style={isMobile ? styles.userOptionsMobile : styles.userOptionsWeb}>\n                        <div style={styles.userOptionsDiv}>\n                            See posts from\n                            <select style={styles.dateOptions} onChange={(e) => handleChange(e)}>\n                                <option defaultValue={undefined + \",\" + undefined}>all</option>\n                                {renderDateOptions()}\n                            </select>\n                        </div>\n\n                        {user && <span style={styles.pageRedirect} onClick={openVisitorPage}>\n                            <div style={styles.userOptionsDiv}>View Journal as a visitor</div>\n                        </span>}\n                    </div>\n\n                    <div className=\"home-post-title\">{!year ? (posts.length > 0 && <Title level={2}>Your Posts</Title>) : (<h1>{`Posts from ${months[month]} ${year}`}</h1>)}</div>\n\n                    {!month && !year ? renderAllPosts() : renderPostsFromDate()}\n                </>\n            ) : (\n                    <h1>You have not Posted. Compose one above ^</h1>\n                )}\n        </div>\n\n    );\n}\n\nconst mapStateToProps = () => ({\n    posts: getPostsFromSelector(),\n    dateOptions: getDateOptions(),\n    user: getUser(),\n    journalName: getJournalName()\n})\n\nexport default connect(mapStateToProps, { getPosts })(Home)\n\nconst styles = {\n    postContainer: {\n        paddingBottom: 10\n    },\n    userOptionsWeb: {\n        alignItems: 'center',\n        borderRadius: 8,\n        padding: 15,\n        margin: 8,\n        color: 'white',\n        backgroundColor: 'rgb(47, 88, 183)',\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    userOptionsMobile: {\n        display: 'block',\n        borderRadius: 8,\n        padding: 15,\n        margin: 8,\n        color: 'white',\n        backgroundColor: 'rgb(47, 88, 183)',\n    },\n    dateOptions: {\n        marginLeft: 5,\n        color: 'white',\n        border: '3px solid white',\n        backgroundColor: 'rgb(129, 139, 249)'\n    },\n    userOptionsDiv: {\n        color: 'white',\n        padding: 8,\n        borderRadius: 8,\n        backgroundColor: 'rgb(129, 139, 249)',\n        margin: 5\n    },\n    pageRedirect: {\n        cursor: 'pointer'\n    }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Modal, Button, Input, Form } from 'antd'\nimport { UsergroupAddOutlined, UserAddOutlined } from '@ant-design/icons'\nimport { bulkAddRecipients, addRecipient } from '../store/actions/settingsActions'\nrequire(\"dotenv\").config()\n\nconst { TextArea } = Input\n\nconst RecipientAddModal = ({ recipients, bulkAddRecipients, addRecipient }) => {\n    const re = /\\S+@\\S+\\.\\S+/\n    const [isVisible, setIsVisible] = React.useState(false)\n    const [isBulkAdd, setIsBulkAdd] = React.useState(false)\n    const [bulkRecipients, setBulkRecipients] = React.useState('')\n    const [singleRecipient, setSingleRecipient] = React.useState('')\n\n    const cleanUp = () => {\n        setIsVisible(false)\n        setIsBulkAdd(false)\n        setBulkRecipients('')\n        setSingleRecipient('')\n    }\n\n    const submitBulk = () => {\n        let noErrors = true\n        if (bulkRecipients === '') {\n            noErrors = false\n            alert('You must include at least one recipient')\n        }\n        const recipientsArray = bulkRecipients.split(\", \")\n        recipientsArray.forEach(recipient => {\n            if (!re.test(recipient)) {\n                noErrors = false\n                alert(`\"${recipient}\" is not a valid email`)\n            }\n        })\n        if (noErrors) {\n            bulkAddRecipients(bulkRecipients).then(() => cleanUp())\n        }\n    }\n\n    const submitSingle = () => {\n        if (singleRecipient === \"\") { return alert(\"You cannot leave recipient blank\") }\n        if (!re.test(singleRecipient)) { return alert(`\"${singleRecipient}\" is not a valid email`) }\n        if (!recipients.includes(singleRecipient)) {\n            addRecipient(singleRecipient).then(() => cleanUp())\n        } else {\n            alert(`Your recipient list already contains ${singleRecipient}`)\n        }\n    }\n\n    return (\n        <div>\n            <div style={{ display: 'flex' }}>\n                <Button style={styles.addRecipient} onClick={() => {\n                    setIsVisible(true)\n                    setIsBulkAdd(true)\n                }}><UsergroupAddOutlined />Add many Recipients</Button>\n                <Button style={styles.addRecipient} onClick={() => {\n                    setIsVisible(true)\n                }}><UserAddOutlined />Add one Recipient</Button>\n            </div>\n            <Modal title={isBulkAdd ? ('Bulk Add') : ('Single Add')} style={styles.modal} visible={isVisible} onOk={isBulkAdd ? submitBulk : submitSingle} onCancel={cleanUp} okText='Submit' cancelText='Cancel'>\n                {isBulkAdd ? (\n                    <Form>\n                        <p>Example: 'example@email.com, bestfriend@forever.com, secondcousin@family.com'</p>\n                        <TextArea value={bulkRecipients} style={styles.bulkAddTextArea} onChange={(e) => setBulkRecipients(e.target.value)} placeholder='add many recipients...' />\n                    </Form>\n                ) : (\n                        <Form>\n                            <Form.Item label='Recipient'>\n                                <Input type=\"email\" placeholder=\"email...\" value={singleRecipient} onChange={(e) => setSingleRecipient(e.target.value)} />\n                            </Form.Item>\n                        </Form>\n                    )}\n            </Modal>\n        </div>\n\n    )\n}\n\nexport default connect(null, { bulkAddRecipients, addRecipient })(RecipientAddModal)\n\nconst styles = {\n    modal: {\n        width: 'auto'\n    },\n    addRecipient: {\n        margin: '10px 10px 10px 0'\n    },\n    bulkAddTextArea: {\n        resize: 'none',\n        height: 150,\n        maxHeight: 350,\n        overflowY: 'auto',\n    },\n}\n","import React, { useState, useEffect } from \"react\"\nimport { connect } from 'react-redux'\nimport { deleteRecipient, editJournalName, clearRecipients, getSettings } from '../store/actions/settingsActions'\nimport { Collapse, Typography, Tag, Button, Popconfirm, Input, Form, Alert } from 'antd';\nimport { EditOutlined } from '@ant-design/icons'\nimport RecipientAddModal from './RecipientAddModal'\nimport { getSettingsFromSelector } from \"../store/selectors/settingsSelector\";\n\nconst { Panel } = Collapse;\nconst { Text, Paragraph } = Typography\nrequire(\"dotenv\").config()\n\nconst UserSettings = ({ settings, deleteRecipient, editJournalName, clearRecipients, getSettings }) => {\n    const [journalName, setJournalName] = useState()\n    const [error, setError] = useState({ msg: '' })\n    const [editName, setEditName] = useState(false)\n\n    useEffect(() => {\n        getSettings()\n    }, [getSettings])\n\n    const editJournalNameHandler = () => {\n        if (journalName === \"\") { return setError(\"Your journal Name cannot be left empty\") }\n\n        editJournalName(journalName).then(() => {\n            setEditName(false)\n            setError({ ...error, msg: '' })\n        }).catch((e) => setError({ ...error, msg: e.response.data.msg }))\n    }\n\n    return (\n        <div>\n            <h1>Settings</h1>\n            <Collapse>\n                <Panel header='Journal Name'>\n                    {error.msg.length > 0 && <Alert style={styles.errorMsg} description={error.msg} type=\"error\" action={<Button type='text' shape='circle' onClick={() => setError({ ...error, msg: '' })}>X</Button>} />}\n                    {editName ? (\n                        <Form>\n                            <Form.Item label='Journal Name'>\n                                <Input value={journalName} onChange={(e) => setJournalName(e.target.value)} />\n                            </Form.Item>\n                            <Form.Item>\n                                <Button style={styles.journalNameButtons} onClick={() => { setEditName(false); setJournalName(settings.journal_name) }}>Cancel</Button>\n                                <Button style={styles.journalNameButtons} type='primary' onClick={() => editJournalNameHandler()}>Submit</Button>\n                            </Form.Item>\n                        </Form>\n                    ) : (\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <Text>{settings && settings.journal_name}</Text>\n                                <Button type='text' shape='circle' onClick={() => { setEditName(true); setJournalName(settings.journal_name) }}><EditOutlined /></Button>\n                            </div>\n                        )\n                    }\n                </Panel>\n                <Panel header='Journal Sharing Method'>\n                    <Paragraph>Journals are shared with their recipients on the end of every month.</Paragraph>\n                    <Paragraph>All posts made during the month are sent to your recipients.</Paragraph>\n                </Panel>\n                <Panel header='Journal Recipients'>\n                    <Text>Share your monthly updates with others by entering their email below.</Text>\n                    {settings && settings.recipients && <RecipientAddModal recipients={settings.recipients} />}\n                    {settings && settings.recipients.length > 0 && <div style={styles.recipientContainer}>\n                        {settings && settings.recipients.map((recipient, index) => {\n                            return <Tag style={styles.recipientTag} key={index}>\n                                <Text style={styles.recipientName}>{recipient}</Text>\n                                <Button type='text' shape='circle' onClick={(e) => deleteRecipient(recipient)}>x</Button>\n                            </Tag>\n                        })}\n                    </div>}\n                    <Popconfirm title=\"Are you sure you want to delete your entire recipient list?\" onConfirm={() => clearRecipients()} okText=\"Yes\" cancelText=\"No\">\n                        {settings && settings.recipients.length > 0 && <Button danger>Delete All</Button>}\n                    </Popconfirm>\n                </Panel>\n            </Collapse>\n        </div>\n    )\n}\n\nconst mapStateToProps = () => ({\n    settings: getSettingsFromSelector()\n})\n\nexport default connect(mapStateToProps, { deleteRecipient, editJournalName, clearRecipients, getSettings })(UserSettings)\n\nconst styles = {\n    startBulkAdd: {\n        padding: 8,\n        marginTop: 10,\n        marginBottom: 10,\n        backgroundColor: 'rgb(129, 139, 249)',\n        borderRadius: 8,\n        color: 'white'\n    },\n    deleteAll: {\n        padding: 8,\n        margin: 10,\n        borderRadius: 8,\n        backgroundColor: 'rgb(252, 167, 167)',\n        color: 'white',\n    },\n    cancelButton: {\n        padding: 8,\n        margin: 10,\n        borderRadius: 8,\n        backgroundColor: 'rgb(129, 139, 249)',\n        color: 'white'\n    },\n    deleteAllConfirm: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    recipientTag: {\n        borderRadius: 8,\n        padding: 2,\n        margin: 5\n    },\n    recipientName: {\n        padding: 4,\n        fontSize: 12\n    },\n    recipientContainer: {\n        padding: 2,\n        border: '1px black solid',\n        borderRadius: 8,\n        maxHeight: 300,\n        overflowY: 'auto',\n        marginBottom: 15\n    },\n    addRecipient: {\n        margin: '10px 10px 10px 0'\n    },\n    journalNameButtons: {\n        marginRight: 10\n    },\n    errorMsg: {\n        padding: 5,\n        margin: '10px 0 10px 0'\n    }\n}","import store from '../store'\n\nexport const getSettingsFromSelector = () => \n    store.getState().settings.settings && store.getState().settings.settings!\n","import React, { useState } from \"react\"\nimport { connect } from 'react-redux'\nimport { likePost } from '../store/actions/postActions'\nimport { Card, Popconfirm, Input, Tooltip } from 'antd'\nimport { SmileTwoTone, SmileOutlined } from '@ant-design/icons'\n\nconst PublicViewPost = ({ post, likePost }) => {\n    const [zoomImage, setZoomImage] = useState(false)\n    const [msg, setMsg] = useState('')\n    const [counter, setCounter] = useState(0)\n    const [isMobile] = useState(window.innerWidth < 435)\n\n    const zoom = () => {\n        setZoomImage(!zoomImage)\n    }\n\n    const incrementCounter = () => {\n        if (counter === post.images.length - 1) {\n            setCounter(0)\n        } else {\n            setCounter(counter + 1)\n        }\n    }\n\n    const decrementCounter = () => {\n        if (counter === 0) {\n            setCounter(post.images.legnth - 1)\n        } else {\n            setCounter(counter - 1)\n        }\n    }\n\n    const getDate = () => {\n        const date = new Date(post.date)\n\n        if (date.getTimezoneOffset() > 0) {\n            date.setTime(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\n        }\n\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n\n        return (\n            `${date.getDate()} ~ ${months[date.getMonth()]} ~ ${date.getFullYear()}`\n        )\n    }\n\n    const renderImages = () => {\n        return post.images.map((image, index) => {\n            return (\n                <img style={zoomImage ? (index === counter ? (styles.imageScrollZoomActive) : (styles.imageScrollZoom)) : (index === counter ? (styles.imageScrollNonZoomActive) : (styles.imageScrollNonZoom))} src={image} alt={index} onClick={zoom} key={index} />\n            )\n        })\n    }\n\n    return (\n        <Card style={!isMobile ? styles.postStyle : {}} actions={[\n            <Popconfirm title={<Input value={msg} placeholder='share a message' onChange={(e) => setMsg(e.target.value)} />} onConfirm={() => likePost(post._id, msg)} okText=\"Send Like\" cancelText=\"Cancel\" icon={<SmileTwoTone twoToneColor='rgb(205, 220, 250)' style={{ fontSize: 20 }} />}>\n                <Tooltip title=\"Add a like and message to this post\" placement='bottom'>\n                    <SmileOutlined />\n                </Tooltip>\n            </Popconfirm>\n        ]}>\n            {post.images.length > 1 ? (\n                <div className=\"post-info\">\n                    <div style={styles.imageScrollContainer}>\n                        <button style={styles.imageScrollControlsLeft} onClick={decrementCounter}>{\"<\"}</button>\n                        {renderImages()}\n                        <button style={styles.imageScrollControlsRight} onClick={incrementCounter}>{\">\"}</button>\n                    </div>\n                </div>\n            ) : (\n                    post.images.length !== 0 && <img style={zoomImage ? styles.imageZoom : styles.imageNonZoom} src={post.images[0]} alt=\"preview\" onClick={zoom} />\n                )}\n            <p style={styles.postText}>{post.text}</p>\n            <p style={styles.postDate}>{getDate()}</p>\n            {post.likes.length > 0 && post.likes.map((msg, index) => {\n                return <Tooltip title={msg} key={index}>\n                    <SmileTwoTone twoToneColor='rgb(205, 220, 250)' style={styles.like} />\n                </Tooltip>\n            })}\n        </Card>\n    )\n}\n\nexport default connect(null, { likePost })(PublicViewPost);\n\nconst styles = {\n    like: {\n        margin: 5\n    },\n    postStyle: {\n        marginRight: 50,\n        marginLeft: 50,\n    },\n    postText: {\n        whiteSpace: 'pre-wrap',\n        paddingRight: 15,\n    },\n    postDate: {\n        fontSize: 12,\n    },\n    imageNonZoom: {\n        float: 'left',\n        borderRadius: 4,\n        margin: '3px 15px 15px 15px',\n        maxWidth: 300,\n        maxHeight: 300,\n        width: 'auto',\n        height: 'auto',\n        cursor: 'zoom-in'\n    },\n    imageZoom: {\n        float: 'left',\n        borderRadius: 4,\n        margin: '3px 15px 15px 15px',\n        maxWidth: 600,\n        maxHeight: 600,\n        width: 'auto',\n        height: 'auto',\n        cursor: 'zoom-out'\n    },\n    imageScrollZoomActive: {\n        position: 'relative',\n        float: 'left',\n        borderRadius: 4,\n        margin: '3px 15px 15px 15px',\n        maxWidth: 600,\n        maxHeight: 600,\n        width: 'auto',\n        height: 'auto',\n        cursor: 'zoom-out'\n    },\n    imageScrollNonZoomActive: {\n        position: 'relative',\n        float: 'left',\n        borderRadius: 4,\n        margin: '3px 15px 15px 15px',\n        maxWidth: 300,\n        maxHeight: 300,\n        width: 'auto',\n        height: 'auto',\n        cursor: 'zoom-in'\n\n    },\n    imageScrollZoom: {\n        opacity: 0,\n        position: 'fixed',\n        float: 'left',\n        width: 0,\n        height: 0,\n    },\n    imageScrollNonZoom: {\n        opacity: 0,\n        position: 'fixed',\n        float: 'left',\n        width: 0,\n        height: 0\n    },\n    imageScrollContainer: {\n        display: 'flex',\n        float: 'left',\n        marginRight: 15\n    },\n    imageScrollControlsRight: {\n        border: 'none',\n        backgroundColor: 'rgb(255, 255, 255)',\n        outline: 'none',\n        cursor: 'pointer',\n        padding: 0,\n        margin: 0\n    },\n    imageScrollControlsLeft: {\n        float: 'left',\n        border: 'none',\n        backgroundColor: 'rgb(255, 255, 255)',\n        outline: 'none',\n        cursor: 'pointer',\n        padding: 0,\n        margin: 0\n    }\n}","import React, { useState, useEffect, useContext } from \"react\";\nimport { connect } from 'react-redux'\nimport VisitorContext from '../context/VisitorContext'\nimport PublicViewPost from \"./PublicViewPost\"\nimport \"../publicView.css\"\nimport { getPostsFromSelector, getDateOptions, getPostsBy } from \"../store/selectors/postSelector\";\nimport { publicGetPosts } from \"../store/actions/postActions\"\n\nconst PublicView = ({ posts, dateOptions, publicGetPosts, match }) => {\n    const [ , setVisitor] = useContext(VisitorContext)\n    const [month, setMonth] = useState()\n    const [year, setYear] = useState()\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    const isMobile = window.innerWidth < 435\n\n    useEffect(() => {\n        setVisitor(true)\n        publicGetPosts(match.params.journalName)\n    }, [setVisitor, publicGetPosts, match.params.journalName])\n\n    const renderDateOptions = () => {\n        return dateOptions && Object.keys(dateOptions).map((year, index) => {\n            return (\n                <optgroup label={year} value={year} key={index}>\n                    {renderMonthOptions(year)}\n                </optgroup>\n            )\n        })\n    }\n\n    const renderMonthOptions = (year) => {\n        return dateOptions[year] && dateOptions[year].map((month, index) => {\n            return <option key={index} value={month + \",\" + year}>{months[month]}</option>\n        })\n    }\n\n    const renderAllPosts = () => {\n        return posts && posts.map((post, index) => {\n            return <div style={styles.postContainer} key={index} >\n                <PublicViewPost post={post} />\n            </div>\n        })\n    }\n\n    const renderPostsFromDate = () => {\n        return getPostsBy(month, year).map((post, index) => {\n            return <div style={styles.postContainer} key={index}>\n                <PublicViewPost post={post} />\n            </div>\n        })\n    }\n\n    const handleChange = (e) => {\n        const vars = e.target.value.split(\",\")\n\n        if (vars[0] === \"undefined\") {\n            setMonth('')\n            setYear('')\n        } else {\n            setMonth(parseInt(vars[0]))\n            setYear(parseInt(vars[1]))\n        }\n    }\n\n    return (\n        <div>\n            <div style={isMobile ? (styles.userOptionsMobile) : (styles.userOptionsWeb)}>\n                <div>\n                    <h1 style={{ color: 'white', padding: 0, margin: 0 }}>{match.params && match.params.journalName.split(\"_\").join(\" \")}</h1>\n                </div>\n                <div style={styles.userOptionsDiv}>\n                    See posts from\n                    <select style={styles.dateOptions} onChange={(e) => handleChange(e)}>\n                        <option defaultValue={undefined + \",\" + undefined}>all</option>\n                        {renderDateOptions()}\n                    </select>\n                </div>\n            </div>\n            <span className=\"public-view-post-header\">{!year ? (<h1>All Posts</h1>) : (<h1>{`Posts from ${months[month]} ${year}`}</h1>)}</span>\n            {!month && !year ? renderAllPosts() : renderPostsFromDate()}\n        </div>\n    )\n}\n\nconst mapStateToProps = () => ({\n    posts: getPostsFromSelector(),\n    dateOptions: getDateOptions()\n})\n\nexport default connect(mapStateToProps, { publicGetPosts })(PublicView)\n\nconst styles = {\n    postContainer: {\n        paddingBottom: 10\n    },\n    userOptionsWeb: {\n        alignItems: 'center',\n        borderRadius: 8,\n        padding: 15,\n        margin: 8,\n        color: 'white',\n        backgroundColor: 'rgb(47, 88, 183)',\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    userOptionsMobile: {\n        display: 'block',\n        borderRadius: 8,\n        padding: 15,\n        margin: 8,\n        color: 'white',\n        backgroundColor: 'rgb(47, 88, 183)',\n    },\n    dateOptions: {\n        marginLeft: 5,\n        color: 'white',\n        border: '3px solid white',\n        backgroundColor: 'rgb(129, 139, 249)'\n    },\n    userOptionsDiv: {\n        color: 'white',\n        padding: 8,\n        borderRadius: 8,\n        backgroundColor: 'rgb(129, 139, 249)',\n        margin: 5,\n    },\n}","import React, { useState, useContext } from \"react\"\nimport { connect } from 'react-redux'\nimport { useHistory } from \"react-router-dom\"\nimport UserContext from \"../../context/UserContext\"\nimport { loginUser } from '../../store/actions/userActions'\nimport { Form, Input, Alert, Button, Card, Typography } from \"antd\"\nrequire(\"dotenv\").config()\n\nconst { Text, Title } = Typography\n\nconst Login = ({ setSignIn, loginUser }) => {\n    const [email, setEmail] = useState()\n    const [password, setPassword] = useState()\n    const [error, setError] = useState({ msg: '' })\n    const { setUserData } = useContext(UserContext)\n    const history = useHistory()\n\n    const submit = async () => {\n        const loginData = { email, password }\n        try {\n            const loginRes = await loginUser(loginData)\n            setUserData({ token: loginRes.token, user: loginRes.user, visitor: false })\n            localStorage.setItem(\"auth-token\", loginRes.token)\n            history.push('/')\n        } catch (e) {\n            e.response.data && e.response.data.msg && setError({ ...error, msg: e.response.data.msg })\n        }\n    }\n\n    return (\n        <Card style={styles.logInForm}>\n            <Title style={{ textAlign: 'center' }}>Log In</Title>\n            {error.msg.length > 0 && <Alert style={styles.errorMsg} description={error.msg} type=\"error\" action={<Button type='text' shape='circle' onClick={() => setError({ ...error, msg: '' })}>X</Button>} />}\n            <Form {...layout}>\n                <Form.Item label={<Text>Email</Text>}>\n                    <Input type=\"email\" onChange={(e) => setEmail(e.target.value)} />\n                </Form.Item>\n                <Form.Item label={<Text>Password</Text>}>\n                    <Input.Password onChange={(e) => setPassword(e.target.value)} />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type='primary' onClick={submit}>Log In</Button>\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type='primary' onClick={() => setSignIn(false)}>I don't have an account - Register</Button>\n                </Form.Item>\n            </Form>\n        </Card>\n    )\n}\n\nexport default connect(null, { loginUser })(Login)\n\nconst layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 16 },\n};\n\nconst tailLayout = {\n    wrapperCol: { offset: 6, span: 16 },\n};\n\nconst styles = {\n    logInForm: {\n        width: 600,\n        borderRadius: 8,\n        margin: 25\n    },\n    errorMsg: {\n        padding: 5,\n        margin: '10px 0 10px 0'\n    }\n}","import React, { useState, useContext } from \"react\"\nimport { connect } from 'react-redux'\nimport { useHistory } from \"react-router-dom\"\nimport UserContext from \"../../context/UserContext\"\nimport { newSettings } from '../../store/actions/settingsActions'\nimport { registerUser, loginUser } from '../../store/actions/userActions'\nimport { Form, Input, Alert, Button, Card, Typography } from \"antd\"\nrequire(\"dotenv\").config()\n\nconst { Text, Title } = Typography\n\nconst Register = ({ setSignIn, newSettings, registerUser, loginUser }) => {\n    const [email, setEmail] = useState()\n    const [password, setPassword] = useState()\n    const [passwordCheck, setPasswordCheck] = useState()\n    const [journalName, setJournalName] = useState()\n    const [error, setError] = useState({ msg: '' })\n    const { setUserData } = useContext(UserContext)\n    const history = useHistory()\n\n    const submit = () => {\n        let finalJournalName = journalName + \" Journal\"\n\n        const newUser = { email, password, passwordCheck, displayName: finalJournalName }\n        registerUser(newUser).then(() => {\n            loginUser({ email, password }).then(({ token, user }) => {\n                newSettings({ displayName: finalJournalName, recipients: [], user: user.id })\n                setUserData({ token, user, visitor: false })\n                localStorage.setItem(\"auth-token\", token);\n                history.push(\"/\")\n            })\n        }).catch(err => setError({ ...error, msg: err.response.data.msg }))\n    }\n\n    return (\n        <Card style={styles.RegisterForm}>\n            <Title style={{ textAlign: 'center' }}>Register</Title>\n            {error.msg.length > 0 && <Alert style={styles.errorMsg} description={error.msg} type=\"error\" action={<Button type='text' shape='circle' onClick={() => setError({ ...error, msg: '' })}>X</Button>} />}\n            <Form {...layout}>\n                <Form.Item label={<Text>Email</Text>}>\n                    <Input type=\"email\" onChange={(e) => setEmail(e.target.value)} />\n                </Form.Item>\n                <Form.Item label={<Text>Password</Text>}>\n                    <Input.Password onChange={(e) => setPassword(e.target.value)} />\n                </Form.Item>\n                <Form.Item label={<Text>Verify Password</Text>}>\n                    <Input.Password placeholder=\"Verify password\" onChange={(e) => setPasswordCheck(e.target.value)} />\n                </Form.Item>\n                <Form.Item label={<Text>Journal Name</Text>}>\n                    <Input type=\"text\" suffix=\"Journal\" onChange={(e) => setJournalName(e.target.value)} />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type='primary' onClick={submit}>Register</Button>\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type='primary' onClick={() => setSignIn(true)}>I have an account - Sign In</Button>\n                </Form.Item>\n            </Form>\n        </Card>\n    )\n}\n\nexport default connect(null, { newSettings, loginUser, registerUser })(Register)\n\nconst layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 16 },\n};\n\nconst tailLayout = {\n    wrapperCol: { offset: 6, span: 16 },\n};\n\nconst styles = {\n    RegisterForm: {\n        width: 600,\n        borderRadius: 8,\n        margin: 25,\n    },\n    errorMsg: {\n        padding: 5,\n        margin: '10px 0 10px 0'\n    }\n}","import React, { useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport isLoggedIn from \"../functions/isLoggedIn\"\nimport { Typography, Row, Col } from 'antd'\nimport Login from \"./auth/Login\"\nimport Register from \"./auth/Register\"\n\nconst { Text, Title } = Typography\n\nconst Home = () => {\n    const [signIn, setSignIn] = React.useState(true)\n    const history = useHistory()\n\n    useEffect(() => {\n        let isCancelled = false\n\n        const checkLoggedIn = async () => {\n            if (!isCancelled) {\n                if (await isLoggedIn()) {\n                    history.push(\"/\")\n                }\n            }\n        }\n\n        checkLoggedIn()\n\n        return () => isCancelled = true\n    })\n\n    return (\n        <Row gutter={[10, 10]} style={styles.row}>\n            <Col span={13}>\n                <Title>Welcome to Shared-Journal</Title>\n                <Text>Here you can create a journal and we will take care of sharing your moments with your closest friends and family.</Text>\n            </Col>\n            <Col>\n                {signIn ? (\n                    <Login setSignIn={setSignIn} />\n                ) : (\n                        <Register setSignIn={setSignIn} />\n                    )}\n            </Col>\n        </Row>\n    )\n}\n\nconst styles = {\n    row: {\n        display: 'flex',\n        justifyContent: 'space-evenly'\n    }\n}\n\nexport default Home","\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\nimport \"./style.css\"\nimport { Layout } from \"antd\"\nimport { connect } from 'react-redux'\nimport { getPosts } from './store/actions/postActions'\nimport { getSettings } from './store/actions/settingsActions'\nimport { getUser } from './store/actions/userActions'\nimport isLoggedIn from \"./functions/isLoggedIn\"\nimport UserContext from \"./context/UserContext\"\nimport VisitorContext from \"./context/VisitorContext\"\nimport PrivateRoute from \"./components/auth/PrivateRoute\"\nimport Header from \"./components/layout/Header\"\nimport Home from \"./components/Home\"\nimport UserSettings from \"./components/UserSettings\"\nimport PublicView from \"./components/PublicView\"\nimport PublicHome from \"./components/PublicHome\"\nimport logo from \"./favicon.ico\"\nimport { getJournalName } from './store/selectors/userDataSelector';\nrequire(\"dotenv\").config()\n\nconst { Content, Footer } = Layout\n\nconst App = ({ getPosts, getSettings, getUser, journalName }) => {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined\n  });\n  const [visitor, setVisitor] = useState(false)\n  const token = localStorage.getItem(\"auth-token\")\n  const [isMobile] = useState(window.innerWidth < 435);\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      if (await isLoggedIn()) {\n        if (token !== '') {\n          getPosts()\n          getSettings()\n          getUser(token).then((res) => {\n            setUserData({ token, user: res })\n          })\n        }\n      }\n    }\n    checkLoggedIn()\n  }, [token, getPosts, getSettings, getUser, journalName])\n\n  return (\n    <Layout style={styles.applicationContainer}>\n      <BrowserRouter>\n        <UserContext.Provider value={{ userData, setUserData }}>\n          <VisitorContext.Provider value={[visitor, setVisitor]}>\n            <Header />\n            <Content style={!isMobile ? ({ margin: '0 150px' }) : ({ margin: 0 })}>\n              <div style={isMobile ? styles.applicationLayoutContentMobile : styles.applicationLayoutContentWeb}>\n                <Switch>\n                  <PrivateRoute path=\"/user_settings\" component={UserSettings} />\n                  <Route path=\"/home\" component={PublicHome} />\n                  <Route path=\"/visitor/:journalName\" component={PublicView} />\n                  <PrivateRoute path=\"/\" component={Home} />\n                </Switch>\n              </div>\n            </Content>\n            <Footer style={styles.applicationFooter}>Shared Journal <img src={logo} alt='logo' style={styles.applicationLogo} /> Created by Noah Cape</Footer>\n          </VisitorContext.Provider>\n        </UserContext.Provider>\n      </BrowserRouter>\n    </Layout>\n  );\n}\n\nconst mapStateToProps = () => ({\n  journalName: getJournalName()\n})\n\nexport default connect(mapStateToProps, { getPosts, getSettings, getUser })(App)\n\nconst styles = {\n  applicationContainer: {\n    padding: 0,\n    margin: 0,\n    boxSizing: 'border-box',\n  },\n  applicationLayoutContentWeb: {\n    minHeight: 280,\n    padding: 24,\n    background: 'rgb(255, 255, 255)'\n  },\n  applicationLayoutContentMobile: {\n    minHeight: 500,\n    background: 'rgb(255, 255, 255)'\n  },\n  applicationFooter: {\n    textAlign: 'center',\n  },\n  applicationLogo: {\n    width: 20,\n    height: 20\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\"\n// styling\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}